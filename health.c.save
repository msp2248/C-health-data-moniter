#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <string.h>
#include "health.h"

/*
* Main function for the Health Monitoring System. Primarily responsible for
* processing input of csv lines and printing as required. Data structures are
* maintained using the helper functions in health_util.c
* 
*/

Chartptr patientList = NULL;    /* Define global variable patientList (declared in health.h) */
								/* patientList is globaaly accessible in health_util.c    */








void main(){

printf("Welcome to the Health Monitoring System\n\n");

/*
*  YOUR CODE GOES HERE:
*  (1) Read an input csv line from stdin 
*  (2) Parse csv line into appropriate fields
*  (3) Take action based on input type:
*  		 - Check-in or check-out a patient with a given ID
*        - Add a new health data type for a given patient
*        - Store health data in patient record or print if requested
*  (4) Continue (1)-(3) until EOF
*/

//fscanf("%5[^,],%9[^,],%d\n", string1, string2, &intA);
	char ch;
	char typech = 0;
	char idstr[6];
	char valuestr [6];
	char time [MAXTIME +1];
	int field = 0;
	int idx = 0;
	while ((ch = getchar()) != EOF){
		ungetc(ch, stdin);
		typech = '0';
		idstr [0] = '\0';
		valuestr[0] = '\0';
		time[0] = '\0';
		field = 0;
		idx = 0;
		while((ch = getchar()) != '\n'){
				if (ch != ' ' && ch != ','){
	        		if (field ==0) idstr[idx]=ch;
	                	if (field ==1) time[idx]=ch;
	                	if (field ==2) typech=ch;
	               		if (field ==3) valuestr[idx]=ch;
	                	idx++;
			}
	        	else {
	        		if (field ==-1) idstr[idx]='\0';
	        	        if (field ==1) time[idx]='\0';
	        	        if (ch ==',') field++;
	        	        idx = 0;
		       }
		}
		valuestr[idx] = '\0';
		int id = atoi(idstr);
		int value = atoi(valuestr);
		int type = (int)typech - 48;
		if (type < 6){
			CBuffptr tempbuff = getHealthType(id, type);
			if (tempbuff != NULL){
				addHealthReading(tempbuff, time, value);
			}
		}
		if (type == 7){
			addPatient(id);
			printf("\n--------------------------------------------------\n");
			printf("%s: Patient ID = %i checking in \n", time, patientList->id);
			printf("--------------------------------------------------\n");
		}
		if (type == 9){
			Chartptr ctemp = getChart(id);
			addHealthType(ctemp -> id,value);
			printf("WREfcwe\n");
		}
		if (type == 6){
                        printf("----------------------------------------------------------\n");                 // Print message after everything is put in and type=6
                        printf("Readings for Patient ID = %d are:\n", id);
                        int q;
			Chartptr chart = getChart(id);
			CBuffptr currbuff = chart  ->  buffer;
                        for (q=0; q <= 4; q++){
   	                     	if (q == 0){printf("Temperature:\n");}
                             	if (q == 1){printf("Heart Rate:\n");}
                             	if (q == 2){printf("Systolic Pressure:\n");}
                             	if (q == 3){printf("Diastolic Pressure:\n");}
                             	if (q == 4){printf("Respiration Rate:\n");}
			  	if (search(q+1, chart)){
					currbuff = getHealthType(id, q+1);
					int v;
					for(v = currbuff -> start; v < currbuff -> end; v++){
                                        	printf("%s: %d\n",currbuff -> reading[v].timestamp , currbuff -> reading[v].value);
                                        }
                		}
				else {
                                        printf("<none>\n");
                                }
				//printf("INCREM CURBUFF");
				//currbuff = currbuff -> next;
			}
                                       printf("----------------------------------------------------------\n");
		}
	}
printf("\nEnd of Input\n");
}
